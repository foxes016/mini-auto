# API 功能表 (apitbl.txt)
# 本文件列出了 Miniauto 專案後端 FastAPI 服務提供的 API 端點及其功能。

## 1. POST /api/sync
- **功能**: Arduino UNO 向後端同步車輛狀態數據，並接收後端發送的控制指令。
- **請求方法**: POST
- **請求體 (JSON)**:
  - `s` (int): 狀態字節 (status_byte)，壓縮後的車輛狀態。
  - `v` (int): 電池電壓 (voltage_mv)，單位毫伏。
  - `t` (Optional[List[List[int]]]): 熱成像數據 (thermal_matrix)，可選，8x8 矩陣。
  - `i` (Optional[str]): ESP32-S3 IP 地址 (esp32_ip)，可選，用於動態註冊。
- **回應體 (JSON)**:
  - `c` (int): 指令字節 (command_byte)，壓縮後的控制指令。
  - `m` (int): 馬達速度 (motor_speed)。
  - `d` (int): 方向角度 (direction_angle)。
  - `a` (int): 舵機角度 (servo_angle)。

## 2. POST /api/register_camera
- **功能**: Arduino UNO 向後端註冊 ESP32-S3 視覺模組的 IP 地址。
- **請求方法**: POST
- **請求體 (JSON)**:
  - `i` (str): ESP32-S3 視覺模組的 IP 地址。
- **回應體 (JSON)**:
  - `message` (str): 操作結果訊息。

## 3. POST /api/manual_control
- **功能**: 設定車輛的手動控制指令 (馬達速度、方向、舵機角度、指令字節)。這些指令將在下一次 /api/sync 回應中發送給 Arduino。
- **請求方法**: POST
- **請求體 (JSON)**:
  - `m` (int): 馬達速度。
  - `d` (int): 方向角度。
  - `a` (int): 舵機角度。
  - `c` (int): 指令字節。
- **回應體 (JSON)**:
  - `message` (str): 操作結果訊息。

## 4. POST /api/set_control_mode
- **功能**: 切換車輛的控制模式 (手動、避障、自主)。
- **請求方法**: POST
- **請求體 (JSON)**:
  - `mode` (str): 控制模式，可選值為 "manual", "avoidance", "autonomous"。
- **回應體 (JSON)**:
  - `message` (str): 操作結果訊息。

## 5. GET /api/latest_data
- **功能**: 獲取後端儲存的最新車輛數據、最新發送的指令、ESP32-S3 IP 和當前控制模式。
- **請求方法**: GET
- **請求體**: 無
- **回應體 (JSON)**:
  - `latest_data` (dict): 最新收到的 Arduino 數據 (包含 s, v, t, i)。
  - `latest_command` (dict): 最新發送給 Arduino 的指令 (包含 c, m, d, a)。
  - `esp32_cam_ip` (str): 註冊的 ESP32-S3 IP 地址。
  - `current_control_mode` (str): 當前控制模式。
  - `thermal_analysis` (dict): 熱成像分析結果。
  - `visual_analysis` (dict): 視覺分析結果。
