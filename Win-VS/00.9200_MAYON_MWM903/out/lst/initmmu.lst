


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ;Copyright (c) 2008 Mars Semiconductor Corp.
    3 00000000         ;
    4 00000000         ;Module Name:
    5 00000000         ;
    6 00000000         ; initmmu.s
    7 00000000         ;
    8 00000000         ;Abstract:
    9 00000000         ;
   10 00000000         ;    The MMU initialization routines.
   11 00000000         ;
   12 00000000         ;   This code provides basic initialization for an ARM92
                       XT including:
   13 00000000         ;   - creation of a 16KB level 1 page table in physical 
                       memory (this will probably
   14 00000000         ;      need to be changed for your target)
   15 00000000         ;   - possible modifying of this table to perform ROM/RA
                       M remapping
   16 00000000         ;
   17 00000000         ;Environment:
   18 00000000         ;
   19 00000000         ;    ARM RealView Developer Suite
   20 00000000         ;
   21 00000000         ;Revision History:
   22 00000000         ; 
   23 00000000         ; 2005/08/26 David Tsai Create 
   24 00000000         ;
   25 00000000                 PRESERVE8
   26 00000000         
   27 00000000                 AREA             InitMMU, CODE, READONLY ; name 
                                                            this block of code
   28 00000000         
   29 00000000 40000000 
                       INDEX_WAY
                               EQU              0x40000000  ; value to add to w
                                                            ay
   30 00000000 00000020 
                       INDEX_SET
                               EQU              0x00000020  ; value to add to i
                                                            ndex
   31 00000000 00000400 
                       INDEX_MAX
                               EQU              0x00000400  ; end value for ind
                                                            ex
   32 00000000         
   33 00000000                 EXPORT           board_activate_mmu
   34 00000000                 EXPORT           Test_Clean_Dcache
   35 00000000                 EXPORT           Disable_Dcache
   36 00000000         board_activate_mmu
   37 00000000         
   38 00000000         ;write TTB
   39 00000000 EE020F10        mcr              p15, 0, r0, c2, c0, 0
   40 00000004         ;write domains
   41 00000004 E3A0003C        ldr              r0, = (3 << 2) | (3 << 4) ;/* d
                                                            omain 1 = client, 2
                                                             = manager, others 
                                                            = none*/
   42 00000008 EE030F10        mcr              p15, 0, r0, c3, c0, 0
   43 0000000C         



ARM Macro Assembler    Page 2 


   44 0000000C E3A02000        mov              r2, #0
   45 00000010         
   46 00000010         ;clear FCSE registers (to avoid any unexpected address t
                       ranslation)
   47 00000010 EE0D2F10        mcr              p15, 0, r2, c13, c0, 0
   48 00000014         ;invalidate ALL TLBs in set-associative area
   49 00000014 EE082F17        mcr              p15, 0, r2, c8, c7, 0
   50 00000018         ;attempt to invalidate fully associative TLB part
   51 00000018         ;mov     r1, #8  ;// there are 8 such entries
   52 00000018         ;LABEL_TLB_CLEAN
   53 00000018         ;mrc     p15, 0, r0, c10, c0, 0
   54 00000018         ;bic     r0, r0, #1
   55 00000018         ;mcr     p15, 0, r0, c10, c0, 0
   56 00000018         ;subs    r1, r1, #1
   57 00000018         ;bne     LABEL_TLB_CLEAN
   58 00000018         ;invalidate all data cache, without flushing !
   59 00000018 EE072F16        mcr              p15, 0, r2, c7, c6, 0
   60 0000001C         ;invalidate all instr cache
   61 0000001C EE072F15        mcr              p15, 0, r2, c7, c5, 0
   62 00000020         ;activate
   63 00000020 EE110F10        mrc              p15, 0, r0, c1, c0, 0
   64 00000024 E3A01007        ldr              r1, =  1 << 2 | 2 | 1 ;D-cache 
                                                            enable, Align check
                                                            , MMU enable
   65 00000028 E1800001        orr              r0, r0, r1
   66 0000002C EE010F10        mcr              p15, 0, r0, c1, c0, 0
   67 00000030 E1A00000        nop
   68 00000034 E1A00000        nop
   69 00000038         ;done
   70 00000038 E1A0F00E        mov              pc, lr
   71 0000003C         
   72 0000003C         Test_Clean_Dcache
   73 0000003C         
   74 0000003C         tc_loop
   75 0000003C EE17FF7E        MRC              p15, 0, r15, c7, c14, 3 
                                                            ; test and clean
   76 00000040 1AFFFFFD        BNE              tc_loop
   77 00000044         
   78 00000044 E3A00000        ldr              r0, =0
   79 00000048 EE070F9A        mcr              p15, 0, r0, c7, c10, 4 ; Drain 
                                                            write buffer
   80 0000004C E1A0F00E        mov              pc, lr
   81 00000050         
   82 00000050         Clean_DCache_ALL
   83 00000050         
   84 00000050         
   85 00000050 E3A01000        mov              r1, #0x0    ; Initialize index 
                                                            counter
   86 00000054         
   87 00000054         CleanD_outer_loop
   88 00000054         
   89 00000054 E3A00000        mov              r0, #0x0    ; Initialize segmen
                                                            t counter
   90 00000058         
   91 00000058         CleanD_inner_loop
   92 00000058         
   93 00000058 E1812000        orr              r2, r1, r0  ; Make segment and 
                                                            line address
   94 0000005C         



ARM Macro Assembler    Page 3 


   95 0000005C EE072F5A        mcr              p15, 0, r2, c7, c10, 2 ; Clean 
                                                            Data Cache entry
   96 00000060 E2800020        add              r0, r0, #INDEX_SET
   97 00000064 E3500B01        cmp              r0, #INDEX_MAX
   98 00000068 1AFFFFFA        bne              CleanD_inner_loop
   99 0000006C E2911101        adds             r1, r1, #INDEX_WAY
  100 00000070 1AFFFFF7        bne              CleanD_outer_loop
  101 00000074         
  102 00000074 E3A00000        ldr              r0, =0
  103 00000078 EE070F9A        mcr              p15, 0, r0, c7, c10, 4 ; Drain 
                                                            write buffer
  104 0000007C         ;clear FCSE registers (to avoid any unexpected address t
                       ranslation)
  105 0000007C EE0D2F10        mcr              p15, 0, r2, c13, c0, 0
  106 00000080         ;invalidate ALL TLBs in set-associative area
  107 00000080 EE082F17        mcr              p15, 0, r2, c8, c7, 0
  108 00000084 E1A0F00E        mov              pc, lr
  109 00000088         
  110 00000088         Disable_Dcache
  111 00000088 E3A00000        ldr              r0, =0      ;
  112 0000008C EE170F7E        mrc              p15, 0, r0, c7, c14, 3 
                                                            ; flush the cache
  113 00000090 EE110F10        mrc              p15, 0, r0, c1, c0, 0
  114 00000094 E3C00004        bic              r0, r0, #(1<<2)
  115 00000098 EE010F10        mcr              p15, 0, r0, c1, c0, 0
  116 0000009C E1A00000        nop
  117 000000A0 E1A00000        nop
  118 000000A4 E1A0F00E        mov              pc, lr
  119 000000A8                 END                          ; mark the end of t
                                                            his file
Command Line: --debug --xref --diag_suppress=9931 --depend=.\out\obj\initmmu.d 
-o.\out\obj\initmmu.o -I.\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\
Include --predefine="__UVISION_VERSION SETA 518" --predefine="USE_SCATTER_SYMS 
SETA 1" --list=.\out\lst\initmmu.lst board\src\initmmu.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CleanD_inner_loop 00000058

Symbol: CleanD_inner_loop
   Definitions
      At line 91 in file board\src\initmmu.s
   Uses
      At line 98 in file board\src\initmmu.s
Comment: CleanD_inner_loop used once
CleanD_outer_loop 00000054

Symbol: CleanD_outer_loop
   Definitions
      At line 87 in file board\src\initmmu.s
   Uses
      At line 100 in file board\src\initmmu.s
Comment: CleanD_outer_loop used once
Clean_DCache_ALL 00000050

Symbol: Clean_DCache_ALL
   Definitions
      At line 82 in file board\src\initmmu.s
   Uses
      None
Comment: Clean_DCache_ALL unused
Disable_Dcache 00000088

Symbol: Disable_Dcache
   Definitions
      At line 110 in file board\src\initmmu.s
   Uses
      At line 35 in file board\src\initmmu.s
Comment: Disable_Dcache used once
InitMMU 00000000

Symbol: InitMMU
   Definitions
      At line 27 in file board\src\initmmu.s
   Uses
      None
Comment: InitMMU unused
Test_Clean_Dcache 0000003C

Symbol: Test_Clean_Dcache
   Definitions
      At line 72 in file board\src\initmmu.s
   Uses
      At line 34 in file board\src\initmmu.s
Comment: Test_Clean_Dcache used once
board_activate_mmu 00000000

Symbol: board_activate_mmu
   Definitions
      At line 36 in file board\src\initmmu.s
   Uses
      At line 33 in file board\src\initmmu.s
Comment: board_activate_mmu used once
tc_loop 0000003C

Symbol: tc_loop



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 74 in file board\src\initmmu.s
   Uses
      At line 76 in file board\src\initmmu.s
Comment: tc_loop used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

INDEX_MAX 00000400

Symbol: INDEX_MAX
   Definitions
      At line 31 in file board\src\initmmu.s
   Uses
      At line 97 in file board\src\initmmu.s
Comment: INDEX_MAX used once
INDEX_SET 00000020

Symbol: INDEX_SET
   Definitions
      At line 30 in file board\src\initmmu.s
   Uses
      At line 96 in file board\src\initmmu.s
Comment: INDEX_SET used once
INDEX_WAY 40000000

Symbol: INDEX_WAY
   Definitions
      At line 29 in file board\src\initmmu.s
   Uses
      At line 99 in file board\src\initmmu.s
Comment: INDEX_WAY used once
3 symbols
343 symbols in table
